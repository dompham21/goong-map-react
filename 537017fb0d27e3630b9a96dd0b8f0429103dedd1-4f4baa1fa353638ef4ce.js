(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"0wsv":function(e,r,t){"use strict";t.r(r),t.d(r,"earthRadius",(function(){return n})),t.d(r,"factors",(function(){return i})),t.d(r,"unitsFactors",(function(){return o})),t.d(r,"areaFactors",(function(){return u})),t.d(r,"feature",(function(){return a})),t.d(r,"geometry",(function(){return c})),t.d(r,"point",(function(){return s})),t.d(r,"points",(function(){return l})),t.d(r,"polygon",(function(){return f})),t.d(r,"polygons",(function(){return d})),t.d(r,"lineString",(function(){return g})),t.d(r,"lineStrings",(function(){return m})),t.d(r,"featureCollection",(function(){return h})),t.d(r,"multiLineString",(function(){return y})),t.d(r,"multiPoint",(function(){return v})),t.d(r,"multiPolygon",(function(){return b})),t.d(r,"geometryCollection",(function(){return p})),t.d(r,"round",(function(){return w})),t.d(r,"radiansToLength",(function(){return P})),t.d(r,"lengthToRadians",(function(){return E})),t.d(r,"lengthToDegrees",(function(){return M})),t.d(r,"bearingToAzimuth",(function(){return k})),t.d(r,"radiansToDegrees",(function(){return S})),t.d(r,"degreesToRadians",(function(){return j})),t.d(r,"convertLength",(function(){return L})),t.d(r,"convertArea",(function(){return x})),t.d(r,"isNumber",(function(){return O})),t.d(r,"isObject",(function(){return F})),t.d(r,"validateBBox",(function(){return C})),t.d(r,"validateId",(function(){return A}));var n=6371008.8,i={centimeters:100*n,centimetres:100*n,degrees:n/111325,feet:3.28084*n,inches:39.37*n,kilometers:n/1e3,kilometres:n/1e3,meters:n,metres:n,miles:n/1609.344,millimeters:1e3*n,millimetres:1e3*n,nauticalmiles:n/1852,radians:1,yards:n/1.0936},o={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/n,yards:1/1.0936},u={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function a(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function c(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return s(r).geometry;case"LineString":return g(r).geometry;case"Polygon":return f(r).geometry;case"MultiPoint":return v(r).geometry;case"MultiLineString":return y(r).geometry;case"MultiPolygon":return b(r).geometry;default:throw new Error(e+" is invalid")}}function s(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!O(e[0])||!O(e[1]))throw new Error("coordinates must contain numbers");return a({type:"Point",coordinates:e},r,t)}function l(e,r,t){return void 0===t&&(t={}),h(e.map((function(e){return s(e,r)})),t)}function f(e,r,t){void 0===t&&(t={});for(var n=0,i=e;n<i.length;n++){var o=i[n];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<o[o.length-1].length;u++)if(o[o.length-1][u]!==o[0][u])throw new Error("First and last Position are not equivalent.")}return a({type:"Polygon",coordinates:e},r,t)}function d(e,r,t){return void 0===t&&(t={}),h(e.map((function(e){return f(e,r)})),t)}function g(e,r,t){if(void 0===t&&(t={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return a({type:"LineString",coordinates:e},r,t)}function m(e,r,t){return void 0===t&&(t={}),h(e.map((function(e){return g(e,r)})),t)}function h(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function y(e,r,t){return void 0===t&&(t={}),a({type:"MultiLineString",coordinates:e},r,t)}function v(e,r,t){return void 0===t&&(t={}),a({type:"MultiPoint",coordinates:e},r,t)}function b(e,r,t){return void 0===t&&(t={}),a({type:"MultiPolygon",coordinates:e},r,t)}function p(e,r,t){return void 0===t&&(t={}),a({type:"GeometryCollection",geometries:e},r,t)}function w(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t}function P(e,r){void 0===r&&(r="kilometers");var t=i[r];if(!t)throw new Error(r+" units is invalid");return e*t}function E(e,r){void 0===r&&(r="kilometers");var t=i[r];if(!t)throw new Error(r+" units is invalid");return e/t}function M(e,r){return S(E(e,r))}function k(e){var r=e%360;return r<0&&(r+=360),r}function S(e){return 180*(e%(2*Math.PI))/Math.PI}function j(e){return e%360*Math.PI/180}function L(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return P(E(e,r),t)}function x(e,r,t){if(void 0===r&&(r="meters"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("area must be a positive number");var n=u[r];if(!n)throw new Error("invalid original units");var i=u[t];if(!i)throw new Error("invalid final units");return e/n*i}function O(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}function F(e){return!!e&&e.constructor===Object}function C(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!O(e))throw new Error("bbox must only contain numbers")}))}function A(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},Nwvx:function(e,r,t){"use strict";t.r(r),t.d(r,"coordEach",(function(){return i})),t.d(r,"coordReduce",(function(){return o})),t.d(r,"propEach",(function(){return u})),t.d(r,"propReduce",(function(){return a})),t.d(r,"featureEach",(function(){return c})),t.d(r,"featureReduce",(function(){return s})),t.d(r,"coordAll",(function(){return l})),t.d(r,"geomEach",(function(){return f})),t.d(r,"geomReduce",(function(){return d})),t.d(r,"flattenEach",(function(){return g})),t.d(r,"flattenReduce",(function(){return m})),t.d(r,"segmentEach",(function(){return h})),t.d(r,"segmentReduce",(function(){return y})),t.d(r,"lineEach",(function(){return v})),t.d(r,"lineReduce",(function(){return b})),t.d(r,"findSegment",(function(){return p})),t.d(r,"findPoint",(function(){return w}));var n=t("0wsv");function i(e,r,t){if(null!==e)for(var n,o,u,a,c,s,l,f,d=0,g=0,m=e.type,h="FeatureCollection"===m,y="Feature"===m,v=h?e.features.length:1,b=0;b<v;b++){c=(f=!!(l=h?e.features[b].geometry:y?e.geometry:e)&&"GeometryCollection"===l.type)?l.geometries.length:1;for(var p=0;p<c;p++){var w=0,P=0;if(null!==(a=f?l.geometries[p]:l)){s=a.coordinates;var E=a.type;switch(d=!t||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===r(s,g,b,w,P))return!1;g++,w++;break;case"LineString":case"MultiPoint":for(n=0;n<s.length;n++){if(!1===r(s[n],g,b,w,P))return!1;g++,"MultiPoint"===E&&w++}"LineString"===E&&w++;break;case"Polygon":case"MultiLineString":for(n=0;n<s.length;n++){for(o=0;o<s[n].length-d;o++){if(!1===r(s[n][o],g,b,w,P))return!1;g++}"MultiLineString"===E&&w++,"Polygon"===E&&P++}"Polygon"===E&&w++;break;case"MultiPolygon":for(n=0;n<s.length;n++){for(P=0,o=0;o<s[n].length;o++){for(u=0;u<s[n][o].length-d;u++){if(!1===r(s[n][o][u],g,b,w,P))return!1;g++}P++}w++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(!1===i(a.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function o(e,r,t,n){var o=t;return i(e,(function(e,n,i,u,a){o=0===n&&void 0===t?e:r(o,e,n,i,u,a)}),n),o}function u(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function a(e,r,t){var n=t;return u(e,(function(e,i){n=0===i&&void 0===t?e:r(n,e,i)})),n}function c(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function s(e,r,t){var n=t;return c(e,(function(e,i){n=0===i&&void 0===t?e:r(n,e,i)})),n}function l(e){var r=[];return i(e,(function(e){r.push(e)})),r}function f(e,r){var t,n,i,o,u,a,c,s,l,f,d=0,g="FeatureCollection"===e.type,m="Feature"===e.type,h=g?e.features.length:1;for(t=0;t<h;t++){for(a=g?e.features[t].geometry:m?e.geometry:e,s=g?e.features[t].properties:m?e.properties:{},l=g?e.features[t].bbox:m?e.bbox:void 0,f=g?e.features[t].id:m?e.id:void 0,u=(c=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,i=0;i<u;i++)if(null!==(o=c?a.geometries[i]:a))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(o,d,s,l,f))return!1;break;case"GeometryCollection":for(n=0;n<o.geometries.length;n++)if(!1===r(o.geometries[n],d,s,l,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===r(null,d,s,l,f))return!1;d++}}function d(e,r,t){var n=t;return f(e,(function(e,i,o,u,a){n=0===i&&void 0===t?e:r(n,e,i,o,u,a)})),n}function g(e,r){f(e,(function(e,t,i,o,u){var a,c=null===e?null:e.type;switch(c){case null:case"Point":case"LineString":case"Polygon":return!1!==r(Object(n.feature)(e,i,{bbox:o,id:u}),t,0)&&void 0}switch(c){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}for(var s=0;s<e.coordinates.length;s++){var l={type:a,coordinates:e.coordinates[s]};if(!1===r(Object(n.feature)(l,i),t,s))return!1}}))}function m(e,r,t){var n=t;return g(e,(function(e,i,o){n=0===i&&0===o&&void 0===t?e:r(n,e,i,o)})),n}function h(e,r){g(e,(function(e,t,o){var u=0;if(e.geometry){var a=e.geometry.type;if("Point"!==a&&"MultiPoint"!==a){var c,s=0,l=0,f=0;return!1!==i(e,(function(i,a,d,g,m){if(void 0===c||t>s||g>l||m>f)return c=i,s=t,l=g,f=m,void(u=0);var h=Object(n.lineString)([c,i],e.properties);if(!1===r(h,t,o,m,u))return!1;u++,c=i}))&&void 0}}}))}function y(e,r,t){var n=t,i=!1;return h(e,(function(e,o,u,a,c){n=!1===i&&void 0===t?e:r(n,e,o,u,a,c),i=!0})),n}function v(e,r){if(!e)throw new Error("geojson is required");g(e,(function(e,t,i){if(null!==e.geometry){var o=e.geometry.type,u=e.geometry.coordinates;switch(o){case"LineString":if(!1===r(e,t,i,0,0))return!1;break;case"Polygon":for(var a=0;a<u.length;a++)if(!1===r(Object(n.lineString)(u[a],e.properties),t,i,a))return!1}}}))}function b(e,r,t){var n=t;return v(e,(function(e,i,o,u){n=0===i&&void 0===t?e:r(n,e,i,o,u)})),n}function p(e,r){if(r=r||{},!Object(n.isObject)(r))throw new Error("options is invalid");var t,i=r.featureIndex||0,o=r.multiFeatureIndex||0,u=r.geometryIndex||0,a=r.segmentIndex||0,c=r.properties;switch(e.type){case"FeatureCollection":i<0&&(i=e.features.length+i),c=c||e.features[i].properties,t=e.features[i].geometry;break;case"Feature":c=c||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var s=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return a<0&&(a=s.length+a-1),Object(n.lineString)([s[a],s[a+1]],c,r);case"Polygon":return u<0&&(u=s.length+u),a<0&&(a=s[u].length+a-1),Object(n.lineString)([s[u][a],s[u][a+1]],c,r);case"MultiLineString":return o<0&&(o=s.length+o),a<0&&(a=s[o].length+a-1),Object(n.lineString)([s[o][a],s[o][a+1]],c,r);case"MultiPolygon":return o<0&&(o=s.length+o),u<0&&(u=s[o].length+u),a<0&&(a=s[o][u].length-a-1),Object(n.lineString)([s[o][u][a],s[o][u][a+1]],c,r)}throw new Error("geojson is invalid")}function w(e,r){if(r=r||{},!Object(n.isObject)(r))throw new Error("options is invalid");var t,i=r.featureIndex||0,o=r.multiFeatureIndex||0,u=r.geometryIndex||0,a=r.coordIndex||0,c=r.properties;switch(e.type){case"FeatureCollection":i<0&&(i=e.features.length+i),c=c||e.features[i].properties,t=e.features[i].geometry;break;case"Feature":c=c||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var s=t.coordinates;switch(t.type){case"Point":return Object(n.point)(s,c,r);case"MultiPoint":return o<0&&(o=s.length+o),Object(n.point)(s[o],c,r);case"LineString":return a<0&&(a=s.length+a),Object(n.point)(s[a],c,r);case"Polygon":return u<0&&(u=s.length+u),a<0&&(a=s[u].length+a),Object(n.point)(s[u][a],c,r);case"MultiLineString":return o<0&&(o=s.length+o),a<0&&(a=s[o].length+a),Object(n.point)(s[o][a],c,r);case"MultiPolygon":return o<0&&(o=s.length+o),u<0&&(u=s[o].length+u),a<0&&(a=s[o][u].length-a),Object(n.point)(s[o][u][a],c,r)}throw new Error("geojson is invalid")}},"VWg+":function(e,r,t){"use strict";t.r(r);var n=t("Nwvx");function i(e){var r=[1/0,1/0,-1/0,-1/0];return Object(n.coordEach)(e,(function(e){r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])})),r}i.default=i,r.default=i}}]);